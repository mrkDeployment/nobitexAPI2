{"ast":null,"code":"var _jsxFileName = \"/home/mrk2/crypto_js/crypto_price/src/component/PriceList.js\";\nimport React from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bborderEmail: '1px solid #999',\n      bborderPassword: '1px solid #999',\n      hover: 'false',\n      Email: null,\n      isLoading: null,\n      Password: null,\n      error: {\n        email: null,\n        password: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    // this.interval = setInterval(() => {\n    //   this.handleClickUserWindows(this.state.user)\n    // }, 5000)\n    // axios.get('https://api.exir.io/v1/trades', {\n    // })\n    //   .then(response => {\n    // \tvar mm=response.data;\n    // \tconsole.log('exir_bitcoin', response.data[\"btc-usdt\"][0].price,\"  time\",response.data[\"btc-usdt\"][0].timestamp.slice(11, 18))\n    // \t})\n    //   .catch(error => {\n    //     console.log('error:')\n    //   })\n    // let data = {\n    // \tsymbol: \"BTCIRT\"\n    // }\n    axios.post('', data, {}).then(response => {\n      console.log('respons,c33', response);\n    }).catch(error => {\n      console.log('erroppppppp');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"aaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(List);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/mrk2/crypto_js/crypto_price/src/component/PriceList.js"],"names":["React","axios","withRouter","List","Component","constructor","props","state","bborderEmail","bborderPassword","hover","Email","isLoading","Password","error","email","password","componentDidMount","post","data","then","response","console","log","catch","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,cAAzB;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,YAAY,EAAE,gBADL;AAETC,MAAAA,eAAe,EAAE,gBAFR;AAGTC,MAAAA,KAAK,EAAE,OAHE;AAITC,MAAAA,KAAK,EAAC,IAJG;AAKTC,MAAAA,SAAS,EAAE,IALF;AAMTC,MAAAA,QAAQ,EAAE,IAND;AAOTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,IADF;AAELC,QAAAA,QAAQ,EAAE;AAFL;AAPE,KAAX;AAYD;;AAEDC,EAAAA,iBAAiB,GAAI;AACnB;AACA;AACA;AAGA;AACA;AACA;AACH;AACA;AAEA;AACG;AACA;AACA;AAEH;AACA;AACA;AAEAhB,IAAAA,KAAK,CAACiB,IAAN,CAAW,EAAX,EAAeC,IAAf,EAAoB,EAApB,EACCC,IADD,CACOC,QAAD,IAAc;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,QAA3B;AACA,KAHD,EAICG,KAJD,CAIQV,KAAD,IAAW;AACjBQ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,KAND;AAQE;;AAEDE,EAAAA,MAAM,GAAE;AACN,wBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE;AAGD;;AApDgC;;AAsDnC,oBAAevB,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport axios from 'axios'\nimport {withRouter} from 'react-router'\n\nclass List extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      bborderEmail: '1px solid #999',\n      bborderPassword: '1px solid #999',\n      hover: 'false',\n      Email:null,\n      isLoading: null,\n      Password: null,\n      error: {\n        email: null,\n        password: null\n      }\n    }\n  }\n\n  componentDidMount () {\n    // this.interval = setInterval(() => {\n    //   this.handleClickUserWindows(this.state.user)\n    // }, 5000)\n\n\n    // axios.get('https://api.exir.io/v1/trades', {\n    // })\n    //   .then(response => {\n\t// \tvar mm=response.data;\n\t// \tconsole.log('exir_bitcoin', response.data[\"btc-usdt\"][0].price,\"  time\",response.data[\"btc-usdt\"][0].timestamp.slice(11, 18))\n      \n\t// \t})\n    //   .catch(error => {\n    //     console.log('error:')\n    //   })\n\n\t// let data = {\n\t// \tsymbol: \"BTCIRT\"\n\t// }\n\n\taxios.post('', data,{})\n\t.then((response) => {\n\t\tconsole.log('respons,c33', response)\n\t})\n\t.catch((error) => {\n\t\tconsole.log('erroppppppp')\n\t})\n\t\n  }\n\n  render(){\n    return (\n\t\t<span>aaaaaaaaaaaaaaa</span>\n    );\n  }\n}\nexport default withRouter(List);\n"]},"metadata":{},"sourceType":"module"}