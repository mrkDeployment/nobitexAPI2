{"ast":null,"code":"var _jsxFileName = \"/home/mrk2/crypto_js/crypto_price/src/component/PriceList.js\";\nimport React from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bborderEmail: '1px solid #999',\n      bborderPassword: '1px solid #999',\n      hover: 'false',\n      max: 0,\n      min: 0,\n      name_max: null,\n      name_min: null,\n      nobitex_price: 0,\n      nobitex_name: \"nobitex bitcoin\",\n      exir_price: 0,\n      exir_name: \"exir bitcoin\",\n      binance_price: 0,\n      binance_name: \"binance bitcoin\"\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.handleMax();\n\n      if (this.state.binance_price > this.nobitex_price) {\n        this.setState({\n          max: this.state.binance_price\n        });\n        this.setState({\n          name_max: this.state.bin\n        });\n      }\n\n      if (this.state.exir_price > this.state.max) {\n        this.setState({\n          max: this.state.exir_price\n        });\n      }\n    }, 3000);\n  }\n\n  handleMax() {\n    axios.get('https://api.exir.io/v1/trades', {}).then(response => {\n      var price = Number.parseInt(response.data[\"btc-usdt\"][0].price, 10);\n      this.setState({\n        exir_price: price\n      });\n    }).catch(error => {\n      console.log('error:');\n    });\n    let data = {\n      symbol: \"BTCUSDT\"\n    };\n    axios.post('https://api.nobitex.ir/v2/trades', data, {}).then(response => {\n      var price = Number.parseInt(response.data.trades[0].price, 10);\n      this.setState({\n        nobitex_price: price\n      });\n    }).catch(error => {\n      console.log('erroppppppp');\n    });\n    axios.get(\"https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT\", {}).then(response => {\n      var price = Number.parseInt(response.data.price, 10);\n      var name = 'binance_bitcoin';\n      var price = Number.parseInt(response.data.trades[0].price, 10);\n      this.setState({\n        binance_price: price\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"aaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(List);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/mrk2/crypto_js/crypto_price/src/component/PriceList.js"],"names":["React","axios","withRouter","List","Component","constructor","props","state","bborderEmail","bborderPassword","hover","max","min","name_max","name_min","nobitex_price","nobitex_name","exir_price","exir_name","binance_price","binance_name","componentDidMount","interval","setInterval","handleMax","setState","bin","get","then","response","price","Number","parseInt","data","catch","error","console","log","symbol","post","trades","name","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport axios from 'axios'\nimport {withRouter} from 'react-router'\n\nclass List extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      bborderEmail: '1px solid #999',\n      bborderPassword: '1px solid #999',\n      hover: 'false',\n      max:0,\n      min: 0,\n      name_max: null,\n      name_min: null,\n      nobitex_price: 0,\n      nobitex_name: \"nobitex bitcoin\",\n      exir_price: 0,\n      exir_name: \"exir bitcoin\",\n      binance_price: 0,\n      binance_name:\"binance bitcoin\",\n    }\n  }\n\n  componentDidMount () {\n    this.interval = setInterval(() => {\n      this.handleMax()\n      if(this.state.binance_price>this.nobitex_price){\n        this.setState({ max: this.state.binance_price })\n        this.setState({ name_max: this.state.bin })\n      }\n      if(this.state.exir_price>this.state.max){\n        this.setState({ max: this.state.exir_price })\n      }\n\n    }, 3000)\n    }\n\n  handleMax(){\n\n    axios.get('https://api.exir.io/v1/trades', {\n    })\n      .then(response => {\n        var price= Number.parseInt(response.data[\"btc-usdt\"][0].price, 10)\n        this.setState({ exir_price: price })\n\t\t})\n      .catch(error => {\n        console.log('error:')\n      })\n\n    let data = {\n      symbol: \"BTCUSDT\"\n    }\n\n    axios.post('https://api.nobitex.ir/v2/trades', data,{})\n    .then((response) => {\n      var price= Number.parseInt(response.data.trades[0].price, 10)\n      this.setState({ nobitex_price: price })\n\n    })\n    .catch((error) => {\n      console.log('erroppppppp')\n    })\n\n    axios.get(\"https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT\", {\n        })\n        .then(response => {\n          var price= Number.parseInt(response.data.price, 10)\n          var name = 'binance_bitcoin'\n          var price= Number.parseInt(response.data.trades[0].price, 10)\n          this.setState({ binance_price: price })\n        })\n        .catch(error => {\n          console.log(error);\n        });\n  }\n  render(){\n    return (\n  \t\t<span>aaaaaaaaaaaaaaa</span>\n    );\n  }\n}\nexport default withRouter(List);\n"]},"metadata":{},"sourceType":"module"}