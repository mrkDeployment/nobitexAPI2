{"ast":null,"code":"var _jsxFileName = \"/home/mrk2/crypto_js/crypto_price/src/component/PriceList.js\";\nimport React from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bborderEmail: '1px solid #999',\n      bborderPassword: '1px solid #999',\n      hover: 'false',\n      nobitex_price: 0,\n      binance_price: 0,\n      nobitex_price: null,\n      bi_price: null,\n      Password: null,\n      error: {\n        email: null,\n        password: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.handleMax();\n    }, 3000);\n  }\n\n  handleMax() {\n    this.setState({\n      max: 0\n    });\n    this.setState({\n      min: 0\n    });\n    axios.get('https://api.exir.io/v1/trades', {}).then(response => {\n      var price = Number.parseInt(response.data[\"btc-usdt\"][0].price, 10);\n      var name = 'nobitex_bitcoin';\n\n      if (price > Number.parseInt(this.state.max, 10)) {\n        this.setState({\n          max: response.data[\"btc-usdt\"][0].price\n        });\n        this.setState({\n          name_max: name\n        });\n      }\n\n      ;\n\n      if (price < Number.parseInt(this.state.max, 10)) {\n        this.setState({\n          min: response.data[\"btc-usdt\"][0].price\n        });\n        this.setState({\n          name_min: name\n        });\n      }\n\n      ;\n    }).catch(error => {\n      console.log('error:');\n    });\n    let data = {\n      symbol: \"BTCUSDT\"\n    };\n    axios.post('https://api.nobitex.ir/v2/trades', data, {}).then(response => {\n      var nobitex_price = Number.parseInt(response.data.trades[0].price, 10);\n      var nobitex_name = 'nobitex_bitcoin';\n      console.log('nobitex_bitcoin', response.data.trades[0].price, \"    time\", response.data.trades[0].time);\n\n      if (Number.parseInt(response.data.trades[0].price, 10) > Number.parseInt(this.state.max, 10)) {\n        this.setState({\n          name_max: name\n        });\n        this.setState({\n          max: price\n        });\n      }\n\n      ;\n\n      if (Number.parseInt(response.data.trades[0].price, 10) < Number.parseInt(this.state.max, 10)) {\n        this.setState({\n          name_min: name\n        });\n        this.setState({\n          min: price\n        });\n      }\n\n      ;\n    }).catch(error => {\n      console.log('erroppppppp');\n    });\n    axios.get(\"https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT\", {}).then(response => {\n      var price = Number.parseInt(response.data.price, 10);\n      var name = 'binance_bitcoin';\n\n      if (price > Number.parseInt(this.state.max, 10)) {\n        this.setState({\n          name_max: name\n        });\n        this.setState({\n          max: price\n        });\n      }\n\n      ;\n\n      if (price < Number.parseInt(this.state.max, 10)) {\n        this.setState({\n          name_min: name\n        });\n        this.setState({\n          min: price\n        });\n      }\n\n      ;\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(\"maxxxxx\", this.state.max);\n    console.log(\"minnnnnnnnnn\", this.state.min);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"aaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(List);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/mrk2/crypto_js/crypto_price/src/component/PriceList.js"],"names":["React","axios","withRouter","List","Component","constructor","props","state","bborderEmail","bborderPassword","hover","nobitex_price","binance_price","bi_price","Password","error","email","password","componentDidMount","interval","setInterval","handleMax","setState","max","min","get","then","response","price","Number","parseInt","data","name","name_max","name_min","catch","console","log","symbol","post","trades","nobitex_name","time","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport axios from 'axios'\nimport {withRouter} from 'react-router'\n\nclass List extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      bborderEmail: '1px solid #999',\n      bborderPassword: '1px solid #999',\n      hover: 'false',\n      nobitex_price:0,\n      binance_price: 0,\n      nobitex_price: null,\n      bi_price: null,\n      Password: null,\n      error: {\n        email: null,\n        password: null\n      }\n    }\n  }\n\n  componentDidMount () {\n    this.interval = setInterval(() => {\n      this.handleMax()\n    }, 3000)\n    }\n\n  handleMax(){\n\n    this.setState({ max: 0 })\n    this.setState({ min: 0 })\n    axios.get('https://api.exir.io/v1/trades', {\n    })\n      .then(response => {\n        var price= Number.parseInt(response.data[\"btc-usdt\"][0].price, 10)\n        var name = 'nobitex_bitcoin'\n        if (price>Number.parseInt(this.state.max, 10)){\n          this.setState({ max: response.data[\"btc-usdt\"][0].price })\n          this.setState({ name_max: name })  \n        };\n        if (price<Number.parseInt(this.state.max, 10)){\n          this.setState({ min: response.data[\"btc-usdt\"][0].price }) \n          this.setState({ name_min: name })\n        };\n\t\t})\n      .catch(error => {\n        console.log('error:')\n      })\n\n    let data = {\n      symbol: \"BTCUSDT\"\n    }\n\n    axios.post('https://api.nobitex.ir/v2/trades', data,{})\n    .then((response) => {\n      var nobitex_price= Number.parseInt(response.data.trades[0].price, 10)\n      var nobitex_name = 'nobitex_bitcoin'\n      console.log('nobitex_bitcoin', response.data.trades[0].price , \"    time\",response.data.trades[0].time)\n      if (Number.parseInt(response.data.trades[0].price, 10)>Number.parseInt(this.state.max, 10)){\n        this.setState({ name_max: name })\n        this.setState({ max: price })\n      };\n      if (Number.parseInt(response.data.trades[0].price, 10)<Number.parseInt(this.state.max, 10)){\n        this.setState({ name_min: name })\n        this.setState({ min: price })\n      };\n\n    })\n    .catch((error) => {\n      console.log('erroppppppp')\n    })\n\n    axios.get(\"https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT\", {\n        })\n        .then(response => {\n          var price= Number.parseInt(response.data.price, 10)\n          var name = 'binance_bitcoin'\n\n          if (price>Number.parseInt(this.state.max, 10)){\n            this.setState({ name_max: name })\n            this.setState({ max: price })\n          };\n          if (price<Number.parseInt(this.state.max, 10)){\n            this.setState({ name_min: name })\n            this.setState({ min: price })\n          };\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    console.log(\"maxxxxx\",this.state.max)\n    console.log(\"minnnnnnnnnn\",this.state.min)\n  }\n  render(){\n    return (\n  \t\t<span>aaaaaaaaaaaaaaa</span>\n    );\n  }\n}\nexport default withRouter(List);\n"]},"metadata":{},"sourceType":"module"}